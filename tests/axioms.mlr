{- axioms of Kleene algebras -}

REG1 := (# <RANDOM>)
REG2 := (# <RANDOM>)
REG3 := (# <RANDOM>)

REG1
REG2
REG3

:verbose
:assert              (# REG1 + 0)  ==  (# REG1 )
:assert          (# REG1 + REG2 )  ==  (# REG2 + REG1)
:assert  (# (REG1 + REG2) + REG3)  ==  (# REG1 + (REG2 + REG3))
:assert                (# REG1 0)  ==  0
:assert                (# 0 REG1)  ==  0
:assert                (# 1 REG1)  ==  (# REG1)
:assert                (# REG1 1)  ==  (# REG1)
:assert    (# REG1 (REG2 + REG3))  ==  (# REG1 REG2 + REG1 REG3)
:assert    (# (REG1 + REG2) REG3)  ==  (# REG1 REG3 + REG2 REG3)
:assert      (# REG1 (REG2 REG3))  ==  (# (REG1 REG2) REG3)

:assert    (# (REG1 + REG2) REG3)  ==  (# REG1 REG3 + REG2 REG3)
:assert    (# REG1 (REG2 + REG3))  ==  (# REG1 REG2 + REG1 REG3)
:assert        (# (REG1 + REG2)*)  ==  (# (REG1* REG2)* REG1*)
:assert          (# (REG1 REG2)*)  ==  (# 1 + REG1 (REG2 REG1)* REG2)

:assert                 (# REG1*)  ==  (# (REG1 REG1)* (1 + REG1))
:assert                 (# REG1*)  ==  (# (REG1 REG1 REG1)* (1 + REG1 + REG1 REG1))
:assert                 (# REG1*)  ==  (# (REG1 REG1 REG1 REG1)* (1 + REG1 + REG1 REG1 + REG1 REG1 REG1))
:assert                 (# REG1*)  ==  (# (REG1 REG1 REG1 REG1 REG1)* (1 + REG1 + REG1 REG1 + REG1 REG1 REG1 + REG1 REG1 REG1 REG1))

:quit
